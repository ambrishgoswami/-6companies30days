class Solution8 {
    public String encode(String s) {
        StringBuilder encodedString = new StringBuilder();
        int n = s.length();
        int count = 1; // Initialize count for the first character

        // Iterate through the string
        for (int i = 1; i < n; i++) {
            // Check if the current character is the same as the previous one
            if (s.charAt(i) == s.charAt(i - 1)) {
                count++; // Increment the count for the current character
            } else {
                // Append the character and its count to the result
                encodedString.append(s.charAt(i - 1)).append(count);
                count = 1; // Reset the count for the new character
            }
        }

        // Append the last character and its count
        encodedString.append(s.charAt(n - 1)).append(count);

        return encodedString.toString();
    }

    // Helper method for testing
    public static void main(String[] args) {
        Solution8 solution = new Solution8();

        // Example 1
        String s1 = "aaaabbbccc";
        System.out.println(solution.encode(s1)); // Output: a4b3c3

        // Example 2
        String s2 = "abbbcdddd";
        System.out.println(solution.encode(s2)); // Output: a1b3c1d4

        // Example 3
        String s3 = "wwwwaaadexxxxxx";
        System.out.println(solution.encode(s3)); // Output: w4a3d1e1x6
    }
}
